C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2025 19:30:02 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\por-tool\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "main.h"
   2          #include "iic.h"
   3          #include "driver.h"
   4          #include <stdio.h>
   5          /*LED参数*/
   6          u8 led_DISP = 0;
   7          u8 flag_L1 = 0;
   8          /*定时器参数*/
   9          u32 ISR_T1 = 0;
  10          /*ADC参数*/
  11          u8 flag_ADC = 0;
  12          u16 voltage = 0;   // 100倍扩大
  13          u16 volt_para = 0; // 10倍扩大
  14          /*数码管参数*/
  15          u8 flag_SEG = 0;
  16          u8 seg_DP[12] = "213332";
  17          u8 seg_CD[8] = {0};
  18          u8 segPS = 0;
  19          u8 page = 0;
  20          u8 breakIn_count = 0;
  21          /*键盘参数*/
  22          u8 key_noUse = 0;
  23          /*EErom参数*/
  24          u16 EE_date = 0;
  25          void led_Fuc(void);
  26          void seg_Fuc(void);
  27          void adc_Fuc(void);
  28          void key_Fuc(void);
  29          
  30          void main(void)
  31          {
  32   1          dev_Cls();
  33   1          T1_int();
  34   1          E2_RD(&EE_date, 0, 1);
*** WARNING C182 IN LINE 34 OF main.c: pointer to different objects
  35   1          if (EE_date > 50 || (EE_date % 5) != 0)
  36   1          {
  37   2              EE_date = 25;
  38   2          }
  39   1          volt_para = EE_date;
  40   1          while (1)
  41   1          {
  42   2              key_Fuc();
  43   2              adc_Fuc();
  44   2              seg_Fuc();
  45   2              led_Fuc();
  46   2          }
  47   1      }
  48          void led_Fuc(void)
  49          {
  50   1          static u32 low_time = 0;
  51   1          static u8 led_past;
  52   1          // L1
  53   1          if (flag_L1)
  54   1          {
C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2025 19:30:02 PAGE 2   

  55   2              low_time = ISR_T1;
  56   2              flag_L1 = 0;
  57   2          }
  58   1          else if ((voltage <= volt_para*10) && (ISR_T1 - low_time > 5000))
  59   1          {
  60   2              led_DISP |= 1;
  61   2          }
  62   1          else
  63   1          {
  64   2              led_DISP &= ~1;
  65   2          }
  66   1          // L2
  67   1          if (breakIn_count % 2)
  68   1          {
  69   2              led_DISP |= (1 << 1);
  70   2          }
  71   1          else
  72   1          {
  73   2              led_DISP &= ~(1 << 1);
  74   2          }
  75   1          // L3
  76   1          if (key_noUse >= 3)
  77   1          {
  78   2              led_DISP |= (1 << 2);
  79   2          }
  80   1          else
  81   1          {
  82   2              led_DISP &= ~(1 << 2);
  83   2          }
  84   1          if (led_DISP != led_past)
  85   1          {
  86   2              led_past = led_DISP;
  87   2              led_Disp(led_DISP);
  88   2          }
  89   1      }
  90          void seg_Fuc(void)
  91          {
  92   1          if (flag_SEG)
  93   1          {
  94   2              flag_SEG = 0;
  95   2              switch (page)
  96   2              {
  97   3              case 0:
  98   3                  sprintf(seg_DP, "U````%3.2f", voltage / 100.0);
  99   3                  break;
 100   3              case 1:
 101   3                  sprintf(seg_DP, "P````%3.2f", volt_para / 10.0);
 102   3                  break;
 103   3              case 2:
 104   3                  sprintf(seg_DP, "N`````%2u", (u16)breakIn_count);
 105   3                  break;
 106   3              }
 107   2          }
 108   1          seg_Tran(seg_DP, seg_CD);
 109   1      }
 110          void adc_Fuc(void)
 111          {
 112   1          float fADC;
 113   1          static u16 volt_past;
 114   1          u8 ADCget;
 115   1          if (flag_ADC)
 116   1          {
C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2025 19:30:02 PAGE 3   

 117   2              flag_ADC = 0;
 118   2              ADCget = PCF8591_ADC();
 119   2              fADC = ADCget * 5.0 / 255;
 120   2              voltage = (fADC + 0.005) * 100; // 手动四舍五入
 121   2              if ((volt_past >= volt_para * 10) && (voltage < volt_para * 10))
 122   2              {
 123   3                  breakIn_count++;
 124   3                  flag_L1 = 1;
 125   3              }
 126   2              volt_past = voltage;
 127   2          }
 128   1      }
 129          void key_Fuc(void)
 130          {
 131   1          static u8 key_past = 0;
 132   1          u8 key_RD;
 133   1          key_RD = key_Martix();
 134   1          if (key_RD != key_past)
 135   1          {
 136   2              key_past = key_RD;
 137   2              switch (key_RD)
 138   2              {
 139   3              case 0:
 140   3                  break;
 141   3              case 12:
 142   3                  page = (++page) % 3;
 143   3                  key_noUse = 0;
 144   3                  if (page == 2)
 145   3                  {
 146   4                      E2_WR(&volt_para, 0, 1);
*** WARNING C182 IN LINE 146 OF main.c: pointer to different objects
 147   4                  }
 148   3                  break;
 149   3              case 13:
 150   3                  if (page == 2)
 151   3                  {
 152   4                      breakIn_count = 0;
 153   4                      key_noUse = 0;
 154   4                  }
 155   3                  else
 156   3                  {
 157   4                      key_noUse++;
 158   4                  }
 159   3                  break;
 160   3              case 16:
 161   3                  if (page == 1)
 162   3                  {
 163   4                      key_noUse = 0;
 164   4                      if (volt_para > 45)
 165   4                      {
 166   5                          volt_para = 0;
 167   5                      }
 168   4                      else
 169   4                      {
 170   5                          volt_para += 5;
 171   5                      }
 172   4                  }
 173   3                  else
 174   3                  {
 175   4                      key_noUse++;
 176   4                  }
 177   3                  break;
C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2025 19:30:02 PAGE 4   

 178   3              case 17:
 179   3                  if (page == 1)
 180   3                  {
 181   4                      key_noUse = 0;
 182   4                      if (volt_para == 0)
 183   4                      {
 184   5                          volt_para = 50;
 185   5                      }
 186   4                      else
 187   4                      {
 188   5                          volt_para -= 5;
 189   5                      }
 190   4                  }
 191   3                  else
 192   3                  {
 193   4                      key_noUse++;
 194   4                  }
 195   3                  break;
 196   3              default:
 197   3                  break;
 198   3              }
 199   2          }
 200   1      }
 201          void T1_ISR(void) interrupt 3
 202          {
 203   1          static u32 ISR_10MS = 0, ISR_100MS = 0;
 204   1          ISR_T1++;
 205   1          if (++ISR_10MS == 10)
 206   1          {
 207   2              ISR_10MS = 0;
 208   2              flag_SEG = 1;
 209   2          }
 210   1          if (++ISR_100MS == 100)
 211   1          {
 212   2              ISR_100MS = 0;
 213   2              flag_ADC = 1;
 214   2          }
 215   1          seg_Disp(seg_CD, segPS);
 216   1          if (++segPS == 8)
 217   1          {
 218   2              segPS = 0;
 219   2          }
 220   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    744    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     54       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
