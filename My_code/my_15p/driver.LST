C51 COMPILER V9.52.0.0   DRIVER                                                            04/01/2025 20:50:28 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DRIVER
OBJECT MODULE PLACED IN driver.OBJ
COMPILER INVOKED BY: D:\por-tool\Keil\C51\BIN\C51.EXE driver.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "driver.h"
   2          extern volatile u32 T1_1ms;
   3          void DEV_cls(void)
   4          {
   5   1          P0 = 0xFF;
   6   1          P2 = (P2 & 0x1F) | 0x80;
   7   1          P2 &= 0x1F;
   8   1      
   9   1          P0 = 0x0;
  10   1          P2 = (P2 & 0x1F) | 0xA0;
  11   1          P2 &= 0x1F;
  12   1      }
  13          void T1_int(void)
  14          {
  15   1          TMOD &= 0x0F;
  16   1          AUXR &= ~(1 << 6);
  17   1          TH1 = 0xFC;
  18   1          TL1 = 0x18;
  19   1          EA = 1;
  20   1          ET1 = 1;
  21   1          TF1 = 0;
  22   1          TR1 = 1;
  23   1      }
  24          void T0_int(void)
  25          {
  26   1          TMOD &=0xF0;
  27   1          AUXR &= ~(1 << 7);
  28   1          TH0 = 0x00;
  29   1          TL0 = 0x00;
  30   1          TF0 = 0;
  31   1          TR0 = 0;
  32   1      }
  33          void LED_disp(u8 outp)
  34          {
  35   1          P0 = ~outp;
  36   1          P2 = (P2 & 0x1F) | 0x80;
  37   1          P2 &= 0x1F;
  38   1      }
  39          void Delay(u8 n)
  40          {
  41   1          u32 DelayT;
  42   1          DelayT = T1_1ms;
  43   1          while (T1_1ms - DelayT < n);
  44   1      }
  45          void SEG_tran(u8 *pDP, u8 *pCD)
  46          {
  47   1          u8 i, j;
  48   1          for (j = 0, i = 0; i < 8; j++, i++)
  49   1          {
  50   2              switch (*(pDP + j))
  51   2              {
  52   3              case '0':
  53   3                  *(pCD + i) = 0xC0;
  54   3                  break;
  55   3              case '1':
C51 COMPILER V9.52.0.0   DRIVER                                                            04/01/2025 20:50:28 PAGE 2   

  56   3                  *(pCD + i) = 0xF9;
  57   3                  break;
  58   3              case '2':
  59   3                  *(pCD + i) = 0xA4;
  60   3                  break;
  61   3              case '3':
  62   3                  *(pCD + i) = 0xB0;
  63   3                  break;
  64   3              case '4':
  65   3                  *(pCD + i) = 0x99;
  66   3                  break;
  67   3              case '5':
  68   3                  *(pCD + i) = 0x92;
  69   3                  break;
  70   3              case '6':
  71   3                  *(pCD + i) = 0x82;
  72   3                  break;
  73   3              case '7':
  74   3                  *(pCD + i) = 0xF8;
  75   3                  break;
  76   3              case '8':
  77   3                  *(pCD + i) = 0x80;
  78   3                  break;
  79   3              case '9':
  80   3                  *(pCD + i) = 0x90;
  81   3                  break;
  82   3              case '-':
  83   3                  *(pCD + i) = 0xBF;
  84   3                  break;
  85   3              case 'F':
  86   3                  *(pCD + i) = 0x8E;
  87   3                  break;
  88   3              case 'P':
  89   3                  *(pCD + i) = 0x8C;
  90   3                  break;
  91   3              case 'H':
  92   3                  *(pCD + i) = 0x89;
  93   3                  break;
  94   3              case 'A':
  95   3                  *(pCD + i) = 0x88;
  96   3                  break;
  97   3              case 'L':
  98   3                  *(pCD + i) = 0xC7;
  99   3                  break;
 100   3              case '.':
 101   3                  if (i > 0)
 102   3                  {
 103   4                      i--;
 104   4                  }
 105   3                  *(pCD + i) &= 0x7F;
 106   3                  break;
 107   3              default:
 108   3                  *(pCD + i) = 0xFF;
 109   3                  break;
 110   3              }
 111   2          }
 112   1      }
 113          void SEG_disp(u8 *pCD, u8 PS)
 114          {
 115   1          P0 = 0xFF;
 116   1          P2 = (P2 & 0x1F) | 0xE0;
 117   1          P2 &= 0x1F;
C51 COMPILER V9.52.0.0   DRIVER                                                            04/01/2025 20:50:28 PAGE 3   

 118   1      
 119   1          P0 = (u8)1 << PS;
 120   1          P2 = (P2 & 0x1F) | 0xC0;
 121   1          P2 &= 0x1F;
 122   1      
 123   1          P0 = *(pCD + PS);
 124   1          P2 = (P2 & 0x1F) | 0xE0;
 125   1          P2 &= 0x1F;
 126   1      }
 127          unsigned char KEY_martix(void)
 128          {
 129   1          u8 RD0 = 0;
 130   1          u8 RD1 = 0;
 131   1          u8 button = 0;
 132   1          P42 = 1;
 133   1          P44 = 0;
 134   1          RD0 = (P3 & 0x0F);
 135   1          P42 = 0;
 136   1          P44 = 1;
 137   1          RD0 = (RD0 << 4) | P3 & 0x0F;
 138   1          if (RD0 == 0xFF)
 139   1          {
 140   2              return 0;
 141   2          }
 142   1          Delay(20);
 143   1          P42 = 1;
 144   1          P44 = 0;
 145   1          RD1 = (P3 & 0x0F);
 146   1          P42 = 0;
 147   1          P44 = 1;
 148   1          RD1 = (RD1 << 4) | P3 & 0x0F;
 149   1          if (RD0 != RD1)
 150   1          {
 151   2              return 0;
 152   2          }
 153   1          switch (~RD1)
 154   1          {
 155   2          case 0x80:
 156   2              button = 4;
 157   2              break;
 158   2          case 0x40:
 159   2              button = 5;
 160   2              break;
 161   2          case 0x20:
 162   2              button = 6;
 163   2              break;
 164   2          case 0x10:
 165   2              button = 7;
 166   2              break;    
 167   2          case 0x08:
 168   2              button = 8;
 169   2              break;
 170   2          case 0x04:
 171   2              button = 9;
 172   2              break;
 173   2          case 0x02:
 174   2              button = 10;
 175   2              break;
 176   2          case 0x01:
 177   2              button = 11;
 178   2              break;    
 179   2          default:
C51 COMPILER V9.52.0.0   DRIVER                                                            04/01/2025 20:50:28 PAGE 4   

 180   2              button = 0;
 181   2              break;
 182   2          }
 183   1          return button;
 184   1      }
 185          void URT_int(void)
 186          {
 187   1        SCON=0x50;
 188   1        T2L=0x64;
 189   1        T2H=0xFF;
 190   1        AUXR|=0x15;
 191   1        EA=1;
 192   1        ES=1;
 193   1      }
 194          void URT_send(u8 *str)
 195          {
 196   1        u8 i=0;
 197   1        while(str[i]){
 198   2          SBUF=str[i];
 199   2          while(!TI);
 200   2          TI=0;
 201   2          i++;
 202   2      }
 203   1      }
 204          void DEV_out(u8 which,u8 how)
 205          {
 206   1        P0=0x00;
 207   1        P2&=0x1F;
 208   1        if(which){
 209   2          if(how){
 210   3            P0|=(1<<4);
 211   3            P2=(P2&0x1F)|0xA0;
 212   3            P2&=0x1F;
 213   3            }
 214   2            else{
 215   3            P0&=~(1<<4);
 216   3            P2=(P2&0x1F)|0xA0;
 217   3            P2&=0x1F;
 218   3      }
 219   2      }else{
 220   2        if(how){
 221   3            P0|=(1<<7);
 222   3            P2=(P2&0x1F)|0xA0;
 223   3            P2&=0x1F;
 224   3          }
 225   2            else{
 226   3            P0&=~(1<<7);
 227   3            P2=(P2&0x1F)|0xA0;
 228   3            P2&=0x1F;
 229   3      }
 230   2      }
 231   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1075    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.52.0.0   DRIVER                                                            04/01/2025 20:50:28 PAGE 5   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
