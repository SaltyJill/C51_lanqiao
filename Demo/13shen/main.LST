C51 COMPILER V9.52.0.0   MAIN                                                              03/11/2025 18:30:12 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\por-tool\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "main.h"
   2          #include "tim.h"
   3          #include "onewire.h"
   4          #include "ds1302.h"
   5          #include "stdio.h"
   6          u8 ucLed = 0;
   7          u8 ucState = 0;
   8          u8 ucMode = 0;
   9          u8 ucS17_Press = 0;
  10          u32 uwMs = 0;
  11          // u32 ulMs10=0;
  12          u8 ucSeg_Flag = 0, ucTim_Flag, uc100ms_Flag = 0;
  13          // u16 uiSec_Cnt=0;
  14          // u8 ucSec_Flag=0;
  15          
  16          u8 pucSeg_Buff[10] = "12345678", pucSeg_Code[8] = {0}, ucSeg_Pos = 0;
  17          
  18          u16 usWd; // defined in uart,used in  ds18b20
  19          u8 ucPara = 25;
  20          u8 pucTim_Now[3] = {10, 20, 30};
  21          
  22          u8 ucHour_5s = 0, ucRly_On = 0;
  23          
  24          void Key_Proc(void);
  25          void Seg_Proc(void);
  26          void Tim_Proc(void);
  27          void Wd_Proc(void);
  28          void Led_Proc(void);
  29          void Relay_Proc(void);
  30          
  31          void main(void)
  32          {
  33   1          u8 pucTim_Start[3] = {8, 59, 50};
  34   1          Cls_Waishe();
  35   1          T1_Init();
  36   1          Wr_Time(pucTim_Start);
  37   1          while (1)
  38   1          {
  39   2              Key_Proc();
  40   2              Seg_Proc();
  41   2              Tim_Proc();
  42   2              Wd_Proc();
  43   2              Relay_Proc();
  44   2              Led_Proc();
  45   2          }
  46   1      }
  47          void Key_Proc(void)
  48          {
  49   1          static u8 ucKey_Old = 0;
  50   1          u8 ucKey_Now;
  51   1          // ucKey_Now=KBD_Read();
  52   1          ucKey_Now = KBD_Read();
  53   1          if (ucKey_Now != ucKey_Old)
  54   1          {
  55   2              switch (ucKey_Now)
C51 COMPILER V9.52.0.0   MAIN                                                              03/11/2025 18:30:12 PAGE 2   

  56   2              {
  57   3              case 0:
  58   3                  if (ucKey_Old == 6)
  59   3                      ucS17_Press = 0;
  60   3                  break;
  61   3              case 1:                        // S12
  62   3                  ucState = (++ucState) % 3; // why not ucState++
  63   3      
  64   3                  break;
  65   3              case 2: // S13
  66   3                  ucMode = !ucMode;
  67   3      
  68   3                  break;
  69   3              case 3: //
  70   3      
  71   3                  break;
  72   3              case 4: //
  73   3      
  74   3                  break;
  75   3              case 5: // S6
  76   3                  if (ucState == 2)
  77   3                  {
  78   4                      ucPara++;
  79   4                      if (ucPara > 99)
  80   4                          ucPara = 0;
  81   4                  }
  82   3                  break;
  83   3              case 6: // S17
  84   3                  if (ucState == 2)
  85   3                  {
  86   4                      if (!ucPara)
  87   4                      {
  88   5                          ucPara = 99;
  89   5                      }
  90   4                      else
  91   4                          ucPara--;
  92   4                  }
  93   3                  ucS17_Press = 1;
  94   3                  break;
  95   3              }
  96   2              ucKey_Old = ucKey_Now;
  97   2          }
  98   1      }
  99          
 100          void Seg_Proc(void)
 101          {
 102   1          // if(ucSeg_Flag)
 103   1          //{
 104   1          // ucSeg_Flag=0;
 105   1      
 106   1          if (!ucState)
 107   1          {
 108   2              sprintf(pucSeg_Buff, "U1   %4.1f", usWd / 10.0);
 109   2          }
 110   1          else if (ucState == 1)
 111   1          {
 112   2              if (!ucS17_Press)
 113   2                  sprintf(pucSeg_Buff, "U2 %02u-%02u", (u16)pucTim_Now[0], (u16)pucTim_Now[1]);
 114   2              else
 115   2                  sprintf(pucSeg_Buff, "U2 %02u-%02u", (u16)pucTim_Now[1], (u16)pucTim_Now[2]);
 116   2          }
 117   1          else
C51 COMPILER V9.52.0.0   MAIN                                                              03/11/2025 18:30:12 PAGE 3   

 118   1          {
 119   2              sprintf(pucSeg_Buff, "U3    %02u", (u16)ucPara);
 120   2          }
 121   1      
 122   1          Seg_Tran(pucSeg_Buff, pucSeg_Code);
 123   1          //}
 124   1      }
 125          void ISR_T1() interrupt 3 // 1ms
 126          {
 127   1          static u8 uc10ms_Cnt = 0, uc100ms_Cnt = 0;
 128   1          uwMs++;
 129   1      
 130   1          if (++uc10ms_Cnt == 10)
 131   1          {
 132   2              uc10ms_Cnt = 0;
 133   2              ucSeg_Flag = 1;
 134   2              ucTim_Flag = 1;
 135   2          }
 136   1          if (++uc100ms_Cnt == 100)
 137   1          {
 138   2              uc100ms_Cnt = 0;
 139   2              uc100ms_Flag = 1;
 140   2          }
 141   1          Seg_Disp(pucSeg_Code, ucSeg_Pos);
 142   1          if (++ucSeg_Pos == 8)
 143   1              ucSeg_Pos = 0;
 144   1      }
 145          void Wd_Proc(void)
 146          {
 147   1          static u32 ulStepBegin = 0;
 148   1          static u8 ucStep = 0;
 149   1          s16 sWd;
 150   1      
 151   1          switch (ucStep)
 152   1          {
 153   2          case 0:
 154   2              Wd_Convert();
 155   2              ulStepBegin = uwMs;
 156   2              ucStep = 1;
 157   2              break;
 158   2          case 1:
 159   2              if (uwMs - ulStepBegin > 760) // 760
 160   2              {
 161   3                  sWd = Wd_Read();
 162   3                  usWd = (sWd / 16.0 + 0.05) * 10;
 163   3                  ulStepBegin = uwMs;
 164   3                  ucStep = 2;
 165   3              }
 166   2              break;
 167   2          case 2:
 168   2              if (uwMs - ulStepBegin > 5) // 100 »ò10
 169   2              {
 170   3                  ucStep = 0;
 171   3              }
 172   2              break;
 173   2          }
 174   1      }
 175          
 176          void Led_Proc(void)
 177          {
 178   1          static u8 ucLed_Old = 0;
 179   1          if (ucHour_5s)
C51 COMPILER V9.52.0.0   MAIN                                                              03/11/2025 18:30:12 PAGE 4   

 180   1              ucLed |= 1;
 181   1          else
 182   1              ucLed &= ~1;
 183   1          if (!ucMode)
 184   1              ucLed |= 1 << 1;
 185   1          else
 186   1              ucLed &= ~(1 << 1);
 187   1      
 188   1          if (ucRly_On)
 189   1          {
 190   2              if (uc100ms_Flag)
 191   2              {
 192   3                  uc100ms_Flag = 0;
 193   3                  ucLed ^= 1 << 2;
 194   3              }
 195   2          }
 196   1          else
 197   1              ucLed &= ~(1 << 2);
 198   1          if (ucLed != ucLed_Old)
 199   1          {
 200   2              ucLed_Old = ucLed;
 201   2              Led_Disp(ucLed);
 202   2          }
 203   1      }
 204          
 205          void Tim_Proc(void)
 206          {
 207   1          if (!ucTim_Flag)
 208   1              return;
 209   1          ucTim_Flag = 0;
 210   1          Rd_Time(pucTim_Now);
 211   1          if (!pucTim_Now[1] && !pucTim_Now[2])
 212   1              ucHour_5s = 1;
 213   1          else if (pucTim_Now[2] >= 5)
 214   1              ucHour_5s = 0;
 215   1      }
 216          
 217          void Relay_Proc(void)
 218          {
 219   1          static ucRly_On_Old = 0;
 220   1          if (!ucMode)
 221   1          {
 222   2              if (usWd > ucPara * 10)
 223   2              {
 224   3                  // Relay(1);
 225   3                  ucRly_On = 1;
 226   3              }
 227   2              else
 228   2              {
 229   3                  // Relay(0);
 230   3                  ucRly_On = 0;
 231   3              }
 232   2          }
 233   1          else
 234   1          {
 235   2              if (ucHour_5s)
 236   2              {
 237   3                  // Relay(1);
 238   3                  ucRly_On = 1;
 239   3              }
 240   2              else
 241   2              {
C51 COMPILER V9.52.0.0   MAIN                                                              03/11/2025 18:30:12 PAGE 5   

 242   3                  // Relay(0);
 243   3                  ucRly_On = 0;
 244   3              }
 245   2          }
 246   1          if (ucRly_On != ucRly_On_Old)
 247   1          {
 248   2              if (ucRly_On)
 249   2                  Relay(1);
 250   2              else
 251   2                  Relay(0);
 252   2              ucRly_On_Old = ucRly_On;
 253   2          }
 254   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    758    ----
   CONSTANT SIZE    =     38    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     49       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
