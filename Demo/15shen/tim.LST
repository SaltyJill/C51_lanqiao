C51 COMPILER V9.52.0.0   TIM                                                               05/12/2024 08:06:56 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE TIM
OBJECT MODULE PLACED IN tim.OBJ
COMPILER INVOKED BY: C:\Keil_C51_v5\C51\BIN\C51.EXE tim.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "tim.h"
   2          
   3          extern volatile u32 ulMs;
   4          void Led_Disp(u8 ucOut)
   5          {
   6   1        P0=~ucOut;
   7   1        P2=(P2 & 0x1F) | 0x80;
   8   1        P2=P2 & 0x1F;
   9   1      }
  10          
  11          void Cls_Waishe(void)
  12          {
  13   1        P0=0xFF;
  14   1        P2=(P2 & 0x1F) | 0x80;
  15   1        P2=P2 & 0x1F;
  16   1        P0=0x0;
  17   1        P2=(P2 & 0x1F) | 0xA0;
  18   1        P2=P2 & 0x1F;
  19   1      }
  20          
  21          void T1_Init(void)   //12T 12M
  22          {
  23   1        TH1=0xFC;
  24   1        TL1=0x18;
  25   1        TMOD &=0x0F;
  26   1        AUXR &=~(1<<6);
  27   1        TF1=0;
  28   1        ET1=1;
  29   1        EA=1;
  30   1        TR1=1;
  31   1      }
  32          void T0_Init(void)    //12T  @12.000MHz   ---P34 for Capture 
  33          {
  34   1        AUXR &= 0x7F;   //12T
  35   1        TMOD |= 0x04;   //mode 0
  36   1        TL0 = 0x00;   
  37   1        TH0 = 0x00;   
  38   1        TF0 = 0;    
  39   1        TR0 = 1;    
  40   1        //ET0=1;
  41   1        //EA=1;
  42   1      }
  43          void Delay(u16 usIn)
  44          {
  45   1        u32 ulInit;
  46   1        ulInit=ulMs;
  47   1        while(ulMs-ulInit<usIn);  
  48   1      }
  49          void Seg_Tran(u8 *pBuff,u8 *pCode)
  50          {
  51   1        u8 i,j;
  52   1        for(i=0,j=0;j<8;i++,j++)
  53   1        {
  54   2          switch(*(pBuff+i))
  55   2          {
C51 COMPILER V9.52.0.0   TIM                                                               05/12/2024 08:06:56 PAGE 2   

  56   3            case '0':
  57   3              *(pCode+j)=0xc0;
  58   3              break;
  59   3            case '1':
  60   3              *(pCode+j)=0xf9;
  61   3              break;
  62   3            case '2':
  63   3              *(pCode+j)=0xa4;
  64   3              break;
  65   3            case '3':
  66   3              *(pCode+j)=0xb0;
  67   3              break;
  68   3            case '4':
  69   3              *(pCode+j)=0x99;
  70   3              break;
  71   3            case '5':
  72   3              *(pCode+j)=0x92;
  73   3              break;
  74   3            case '6':
  75   3              *(pCode+j)=0x82;
  76   3              break;
  77   3            case '7':
  78   3              *(pCode+j)=0xf8;
  79   3              break;
  80   3            case '8':
  81   3              *(pCode+j)=0x80;
  82   3              break;
  83   3            case '9':
  84   3              *(pCode+j)=0x90;
  85   3              break;
  86   3            case 'A':
  87   3              *(pCode+j)=0x88;
  88   3              break;
  89   3            case 'B':
  90   3              *(pCode+j)=0x83;
  91   3              break;
  92   3            case 'C':
  93   3              *(pCode+j)=0xc6;
  94   3              break;
  95   3            case 'D':
  96   3              *(pCode+j)=0xa1;
  97   3              break;
  98   3            case 'E':
  99   3              *(pCode+j)=0x86;
 100   3              break;
 101   3            case 'F':
 102   3              *(pCode+j)=0x8e;
 103   3              break;
 104   3            case '-':
 105   3              *(pCode+j)=0xbf;
 106   3              break;
 107   3            case ' ':
 108   3              *(pCode+j)=0xff;
 109   3              break;
 110   3            case '.':
 111   3              j=j-1;
 112   3              *(pCode+j) &=0x7f;
 113   3              break;
 114   3            case 'H':
 115   3              *(pCode+j)=0x89;
 116   3              break;
 117   3            case 'P':
C51 COMPILER V9.52.0.0   TIM                                                               05/12/2024 08:06:56 PAGE 3   

 118   3              *(pCode+j)=0x8c;
 119   3              break;
 120   3            case 'L':
 121   3              *(pCode+j)=0xc7;
 122   3              break;
 123   3            default:
 124   3              *(pCode+j)=0xff;        
 125   3          } 
 126   2        }
 127   1      }
 128          void Seg_Disp(u8 *pCode,u8 ucPos)
 129          {
 130   1        P0=0xFF;
 131   1        P2=(P2 & 0x1F)|0xe0;
 132   1        P2 =P2 & 0x1F;
 133   1        P0=(u8)1<<ucPos;
 134   1        P2=(P2 & 0x1F)|0xc0;
 135   1        P2 =P2 & 0x1F;
 136   1        P0=*(pCode+ucPos);
 137   1        P2=(P2 & 0x1F)|0xe0;
 138   1        P2 =P2 & 0x1F;
 139   1      }
 140          u8 KBD_Read(void)
 141          {
 142   1        u16 uiArray1,uiArray2;
 143   1        u8 ucRtn=0;
 144   1        //P44=0;P42=1;P35=1;P34=1;     P34 used as Pwm out,in Capture
 145   1        P44=0;P42=1;
 146   1        uiArray1=P3 & 0x0F;
 147   1        P44=1;P42=0;
 148   1        uiArray1=(uiArray1 <<4) | P3 & 0x0F;    
 149   1        if(uiArray1==0x00FF) return 0;
 150   1        Delay(10);
 151   1        //P44=0;P42=1;P35=1;P34=1;
 152   1        P44=0;P42=1;
 153   1        uiArray2=P3 & 0x0F;
 154   1        P44=1;P42=0;
 155   1        uiArray2=(uiArray2 <<4) | P3 & 0x0F;
 156   1        
 157   1        if(uiArray1!=uiArray2) return 0;
 158   1        switch(~uiArray1)
 159   1        {
 160   2          case 0xFF80:
 161   2            ucRtn=1;
 162   2            break;
 163   2          case 0xFF40:
 164   2            ucRtn=2;
 165   2            break;    
 166   2          case 0xFF20:
 167   2            ucRtn=3;
 168   2            break;    
 169   2          case 0xFF10:
 170   2            ucRtn=4;
 171   2            break;    
 172   2          case 0xFF08:
 173   2            ucRtn=5;
 174   2            break;
 175   2          case 0xFF04:
 176   2            ucRtn=6;
 177   2            break;    
 178   2          case 0xFF02:
 179   2            ucRtn=7;
C51 COMPILER V9.52.0.0   TIM                                                               05/12/2024 08:06:56 PAGE 4   

 180   2            break;    
 181   2          case 0xFF01:
 182   2            ucRtn=8;
 183   2            break;    
 184   2          default:
 185   2            ucRtn=0;
 186   2        }
 187   1        return ucRtn;
 188   1      }
 189          u8 MaoPao_Filter(u8 *pucBuff,u8 ucLen)  
 190          {
 191   1        u8 i,j;
 192   1        u8 Temp;
 193   1        
 194   1        for(i=0;i<=ucLen-2;i++)    //ucLen/2
 195   1        {
 196   2          for(j=0;j<=ucLen-2-i ;j++)
 197   2          {
 198   3            if(pucBuff[j]>pucBuff[j+1])
 199   3            {
 200   4              Temp=pucBuff[j+1];
 201   4              pucBuff[j+1]=pucBuff[j];
 202   4              pucBuff[j]=Temp;
 203   4            }
 204   3          }
 205   2        }
 206   1        Temp=pucBuff[ucLen/2];
 207   1        return Temp;
 208   1      }
 209          u8 ComPare_Filter(u8 *pucBuff,u8 ucLen) 
 210          {
 211   1        u8 i,j,Temp;
 212   1        for(i=0;i<=ucLen-2;i++)
 213   1        {
 214   2          for(j=i+1;j<=ucLen-1;j++)
 215   2          {
 216   3            if(pucBuff[i]>pucBuff[j])
 217   3            {
 218   4              Temp=pucBuff[i];
 219   4              pucBuff[i]=pucBuff[j];
 220   4              pucBuff[j]=Temp;
 221   4            }
 222   3          }
 223   2        }
 224   1        Temp=pucBuff[ucLen/2];
 225   1        return Temp;
 226   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1529    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      29
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
