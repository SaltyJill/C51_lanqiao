C51 COMPILER V9.52.0.0   MAIN                                                              05/12/2024 09:27:24 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_C51_v5\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "main.h"
   2          #include "tim.h"
   3          #include "ds1302.h"
   4          #include "iic.h"
   5          #include <stdio.h>
   6          
   7          u8 ucLed=0;
   8          //volatile u8 ucMode=0;
   9          u8 ucState=0;  //0,1,2,3
  10          u8 ucMode=0;   //0,1
  11          
  12          
  13          u32 ulMs=0;
  14          u16 us1000_Cnt=0;
  15          u8 ucSec_Flag=0;
  16          u8 uc10_Cnt=0,uc1302_Flag=0;
  17          u8 uc200_Cnt=0,uc200_Flag_L1=0,uc200_Flag_L2=0;
  18          u8 ucAdc_Flag=0;
  19          u16 us250_Cnt=0;
  20          u8 pucSeg_Buff[10]="123456789",pucSeg_Code[8]={0},ucSeg_Pos=0;
  21          
  22          u16 uiFq=0;   //raw
  23          
  24          u16 uiFq_Max=0;
  25          u16 uiFq_Pf=2000;
  26          s16 usFq_Jz=0;
  27          u8 pucTime_Trig[3]={10,20,30};
  28          u8 ucAdc=0;  //debug
  29          u8 ucDac=80;
  30          
  31          //DS1302
  32          u8 pucTime_Start[3]={9,0,0};
  33          u8 pucTime_Now[3]={10,20,30};
  34          
  35          void Key_Proc(void);
  36          void Seg_Proc1(void);
  37          
  38          void Dac_Proc(void);
  39          void Time_Proc(void);
  40          void Led_Proc(void);
  41          
  42          
  43          void main(void)
  44          {
  45   1        Cls_Waishe();
  46   1        T1_Init();
  47   1        T0_Init();
  48   1        
  49   1        PCF8591_Write(120); 
  50   1        Wr_Time(pucTime_Start); 
  51   1        
  52   1        while(1)
  53   1        {
  54   2          Key_Proc();
  55   2          Seg_Proc1();
C51 COMPILER V9.52.0.0   MAIN                                                              05/12/2024 09:27:24 PAGE 2   

  56   2          Led_Proc();
  57   2          Dac_Proc();
  58   2          Time_Proc();
  59   2        }
  60   1      }
  61          void Key_Proc(void)
  62          {
  63   1        static u8 ucKey_Old=0;
  64   1        u8 ucKey_Now;
  65   1        ucKey_Now=KBD_Read();
  66   1        if(ucKey_Now !=ucKey_Old)
  67   1        {
  68   2          switch(ucKey_Now)
  69   2          {
  70   3            //case 0:       
  71   3            //  break;
  72   3            case 1:   //S4
  73   3                ucState=(++ucState) % 4;    //++ucState ?
  74   3                if(ucState==1 || ucState==3) ucMode=0;
  75   3                break;
  76   3            case 2:   //S5
  77   3                ucMode=!ucMode;
  78   3                break;
  79   3            case 3:   //S6
  80   3                break;
  81   3            case 4:   //S7    
  82   3                break;      
  83   3            case 5:   //S8
  84   3                if(ucState==1)
  85   3                {
  86   4                  if(!ucMode)
  87   4                  {
  88   5                    
  89   5                    uiFq_Pf +=1000;
  90   5                    if(uiFq_Pf>9000) uiFq_Pf=9000;
  91   5                  }
  92   4                  else
  93   4                  {
  94   5                    usFq_Jz +=100;
  95   5                    if(usFq_Jz>900) usFq_Jz=900;
  96   5                  }
  97   4                }
  98   3                break;      
  99   3            case 6:   //S9
 100   3                if(ucState==1)
 101   3                {
 102   4                  if(!ucMode)
 103   4                  {
 104   5                    
 105   5                    uiFq_Pf -=1000;
 106   5                    if(uiFq_Pf<1000) uiFq_Pf=1000;
 107   5                  }
 108   4                  else
 109   4                  {
 110   5                    usFq_Jz -=100;
 111   5                    if(usFq_Jz<-900) usFq_Jz=-900;
 112   5                  }
 113   4                }
 114   3              break;      
 115   3          } 
 116   2          ucKey_Old=ucKey_Now;
 117   2        }
C51 COMPILER V9.52.0.0   MAIN                                                              05/12/2024 09:27:24 PAGE 3   

 118   1        
 119   1      }
 120          
 121          void Seg_Proc1(void)
 122          {
 123   1        s32 swFq2;
 124   1        switch(ucState)
 125   1        {
 126   2          case 0:     
 127   2            swFq2=(s32)(uiFq)+usFq_Jz;
 128   2            if(swFq2>=0)
 129   2              //sprintf(pucSeg_Buff, "F  %5u", (u16)(uiFq+usFq_Jz));
 130   2              sprintf(pucSeg_Buff, "%3u%5d",(u16)ucAdc, (s16)(uiFq+usFq_Jz));
 131   2            else
 132   2              sprintf(pucSeg_Buff, "F     LL");     
 133   2            break;
 134   2          case 1:
 135   2            if(!ucMode)
 136   2              sprintf(pucSeg_Buff, "P1  %4u", (u16)(uiFq_Pf));
 137   2            else
 138   2              sprintf(pucSeg_Buff, "P2  %4d", (s16)(usFq_Jz));
 139   2            break;
 140   2          case 2:
 141   2            sprintf(pucSeg_Buff, "%02u-%02u-%02u", (u16)pucTime_Now[0],(u16)pucTime_Now[1],(u16)pucTime_Now[2]);
 142   2            break;
 143   2          case 3:
 144   2            if(!ucMode)
 145   2              sprintf(pucSeg_Buff, "HF %5u", (u16)(uiFq_Max));
 146   2            else
 147   2              sprintf(pucSeg_Buff, "HA%02u%02u%02u", (u16)pucTime_Trig[0],(u16)pucTime_Trig[1],(u16)pucTime_Trig[2])
             -;
 148   2            break;
 149   2        }
 150   1        //sprintf(pucSeg_Buff, "%3u",(u16)ucAdc); 
 151   1          //sprintf(pucSeg_Buff, "1234567.8");  
 152   1          //if(ucAdc <50)
 153   1            //sprintf(pucSeg_Buff, "%5.1f%4u", fWd,(u16)ucAdc); 
 154   1          //else
 155   1            //sprintf(pucSeg_Buff, "%5.1f", fWd); 
 156   1          
 157   1          //sprintf(pucSeg_Buff, "%5u%2u", uiFq,(u16)ucTrigFlag);   
 158   1          Seg_Tran(pucSeg_Buff,pucSeg_Code);  
 159   1      }
 160          void ISR_T1() interrupt 3   //1ms
 161          {
 162   1        //static u8 ucMsCnt=0;
 163   1        ulMs++;
 164   1        
 165   1        if(++uc10_Cnt==10)    //
 166   1        {
 167   2          uc10_Cnt=0;
 168   2          uc1302_Flag=1;
 169   2        }
 170   1        if(++uc200_Cnt==200)    //
 171   1        {
 172   2          uc200_Cnt=0;
 173   2          uc200_Flag_L1=1;
 174   2          uc200_Flag_L2=1;
 175   2        }
 176   1        /* method 2
 177   1        if(ulMs % 10==0)
 178   1          ucSeg_Flag=1;*/
C51 COMPILER V9.52.0.0   MAIN                                                              05/12/2024 09:27:24 PAGE 4   

 179   1        //if(ulMs % 10==0)   //method 3
 180   1        //  ulMs10++; 
 181   1        /*
 182   1        if(ulMs % 100 ==0)
 183   1        {
 184   1          ulMs100++;
 185   1        }*/
 186   1          
 187   1        //PWM  target:1
 188   1        /* P34 ^=1; */
 189   1        //PWM  target:2
 190   1        /*
 191   1        if(++ucMsCnt==5)
 192   1        {
 193   1          ucMsCnt=0;
 194   1          P34 ^=1;
 195   1        }*/
 196   1        //PWM  target:3
 197   1        /*
 198   1        if(++ucMsCnt==10) ucMsCnt=0;
 199   1        if(!ucMsCnt)
 200   1          P34=1;
 201   1        else if(ucMsCnt==3)
 202   1          P34=0;
 203   1        */
 204   1        if(++us1000_Cnt ==1000)
 205   1        {
 206   2          us1000_Cnt=0;
 207   2          ucSec_Flag=1;
 208   2          us250_Cnt=0;
 209   2          //ucLed ^=1<<7;  //Led8
 210   2          //Led_Disp(ucLed);
 211   2          //P34 Freq in Capture
 212   2          
 213   2          uiFq=(u16)(TH0<<8)+TL0;
 214   2          TR0=0;
 215   2          TH0=0;
 216   2          TL0=0;
 217   2          TR0=1;   
 218   2            
 219   2          //P34 Freq in Capture
 220   2          
 221   2        }
 222   1        if(++us250_Cnt==250)    //
 223   1        {
 224   2          ucAdc_Flag=1;
 225   2        }
 226   1        Seg_Disp(pucSeg_Code,ucSeg_Pos);
 227   1        if(++ucSeg_Pos==8) ucSeg_Pos=0;   
 228   1      }
 229          void Time_Proc(void)
 230          {
 231   1        if(!uc1302_Flag) return;
 232   1        uc1302_Flag=0;
 233   1        Rd_Time(pucTime_Now); 
 234   1      }
 235          void Dac_Proc(void)
 236          { 
 237   1        if(ucSec_Flag) 
 238   1        {
 239   2          ucSec_Flag=0;
 240   2          if((s32)uiFq+usFq_Jz>=0)
C51 COMPILER V9.52.0.0   MAIN                                                              05/12/2024 09:27:24 PAGE 5   

 241   2          {
 242   3            if(uiFq+usFq_Jz>uiFq_Max)
 243   3            {
 244   4              uiFq_Max=uiFq+usFq_Jz;
 245   4              pucTime_Trig[0]=pucTime_Now[0];
 246   4              pucTime_Trig[1]=pucTime_Now[1];
 247   4              pucTime_Trig[2]=pucTime_Now[2];
 248   4            }
 249   3            if(uiFq+usFq_Jz>uiFq_Pf)
 250   3              ucDac=255;
 251   3            else if(uiFq+usFq_Jz<500)
 252   3              ucDac=255/5;
 253   3            else
 254   3              ucDac=((uiFq+usFq_Jz-500)*4/(uiFq_Pf-500)+1)*255/5;     
 255   3          }
 256   2          else
 257   2          {
 258   3            ucDac=0;
 259   3          }
 260   2          PCF8591_Write(ucDac);
 261   2        }
 262   1        if(ucAdc_Flag)
 263   1        {
 264   2          ucAdc_Flag=0;
 265   2          ucAdc=PCF8591_Read(0);
 266   2        }
 267   1      }
 268          void Led_Proc(void)
 269          {
 270   1        s32 swFq1;
 271   1        static u8 ucLed_Old=0;
 272   1        if(!ucState)
 273   1        {
 274   2          if(uc200_Flag_L1)
 275   2          {
 276   3            uc200_Flag_L1=0;
 277   3            ucLed ^=1<<0;
 278   3          }
 279   2        }
 280   1        else
 281   1          ucLed &=~(1<<0);
 282   1        swFq1=(s32)uiFq+usFq_Jz;
 283   1        if(swFq1<0)
 284   1        {
 285   2          ucLed |=1<<1;   
 286   2        }
 287   1        else if(swFq1>uiFq_Pf)   
 288   1        {
 289   2          if(uc200_Flag_L2)
 290   2          {
 291   3            uc200_Flag_L2=0;
 292   3            ucLed ^=1<<1;
 293   3          }
 294   2        }
 295   1        else
 296   1          ucLed &=~(1<<1);
 297   1        if(ucLed!=ucLed_Old)
 298   1        {
 299   2          ucLed_Old=ucLed;
 300   2          Led_Disp(ucLed);
 301   2        }
 302   1      }
C51 COMPILER V9.52.0.0   MAIN                                                              05/12/2024 09:27:24 PAGE 6   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1361    ----
   CONSTANT SIZE    =     69    ----
   XDATA SIZE       =     58       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
