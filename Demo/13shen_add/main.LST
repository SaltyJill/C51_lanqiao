C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2024 09:24:44 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_C51_v5\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "main.h"
   2          #include "tim.h"
   3          #include "onewire.h"
   4          #include "ds1302.h"
   5          #include "stdio.h"
   6          #include "string.h"
   7          u8 ucLed=0;
   8          u8 ucState=0;
   9          u8 ucMode=0;
  10          u8 ucS17_Press=0;
  11          u32 uwMs=0;
  12          //u32 ulMs10=0; 
  13          u8 ucSeg_Flag=0,ucTim_Flag,uc100ms_Flag=0,ucWave_Flag=0;
  14          //u16 uiSec_Cnt=0;
  15          //u8 ucSec_Flag=0;
  16          
  17          u8 pucSeg_Buff[10]="12345678",pucSeg_Code[8]={0},ucSeg_Pos=0;
  18          
  19          u16 usWd;  //defined in uart,used in  ds18b20
  20          u8 ucPara=25;
  21          u8 pucTim_Now[3]={10,20,30};
  22          
  23          u8 ucHour_5s=0,ucRly_On=0;
  24          
  25          sbit Tx_Wave=P1^0;
  26          sbit Rx_Wave=P1^1;
  27          u16 usDist=0;
  28          
  29          u8 ucUartFlag=0;
  30          
  31          void Key_Proc(void);
  32          void Seg_Proc(void);
  33          void Tim_Proc(void);
  34          void Wd_Proc(void);
  35          void Led_Proc(void);
  36          void Relay_Proc(void);
  37          void Wave_Proc(void);
  38          void Uart_Proc(void);
  39          
  40          void main(void)
  41          {
  42   1        u8 pucTim_Start[3]={8,59,50};
  43   1        Cls_Waishe();
  44   1        T1_Init();
  45   1        T0_Init();
  46   1        UartInit();
  47   1        Wr_Time(pucTim_Start);
  48   1        UartSend("hello");
  49   1        while(1)
  50   1        {
  51   2          Key_Proc();   
  52   2          Seg_Proc();   
  53   2          Tim_Proc(); 
  54   2          Wd_Proc();
  55   2          Relay_Proc();
C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2024 09:24:44 PAGE 2   

  56   2          Led_Proc();
  57   2          Wave_Proc();
  58   2          Uart_Proc();
  59   2        }
  60   1      }
  61          void Key_Proc(void)
  62          {
  63   1        static u8 ucKey_Old=0;
  64   1        static u32 uwMs_Key=0;
  65   1        u8 ucKey_Now;
  66   1        ucKey_Now=KBD_Read();
  67   1        if(ucKey_Now !=ucKey_Old)
  68   1        {
  69   2          uwMs_Key=uwMs;
  70   2          switch(ucKey_Now)
  71   2          {
  72   3            case 0:       
  73   3              if(ucKey_Old==6)
  74   3                ucS17_Press=0;
  75   3              break;
  76   3            case 1:   //S12
  77   3              ucState=(++ucState) % 4;   //why not ucState++
  78   3              
  79   3              break;
  80   3            case 2:   //S13
  81   3              ucMode=!ucMode;
  82   3              
  83   3              break;
  84   3            case 3:   //
  85   3              
  86   3              break;
  87   3            case 4:   //
  88   3              
  89   3              break;      
  90   3            case 5:   //S6
  91   3              if(ucState==2)
  92   3              {
  93   4                ucPara++;
  94   4                if(ucPara>99) ucPara=10;
  95   4              }
  96   3              break;    
  97   3            case 6:   //S17
  98   3              if(ucState==2)
  99   3              {
 100   4                if(!ucPara)
 101   4                {
 102   5                  ucPara=99;
 103   5                }
 104   4                else
 105   4                  ucPara--;
 106   4              }
 107   3              ucS17_Press=1;
 108   3              break;            
 109   3          }
 110   2          ucKey_Old=ucKey_Now;
 111   2        }
 112   1        if(uwMs-uwMs_Key>=800)
 113   1        {
 114   2          switch(ucKey_Old)
 115   2          {
 116   3            case 5:   //S6
 117   3              if(ucState==2)
C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2024 09:24:44 PAGE 3   

 118   3              {
 119   4                ucPara++;
 120   4                if(ucPara>99) ucPara=10;
 121   4              }
 122   3              break;    
 123   3            case 6:   //S17
 124   3              if(ucState==2)
 125   3              {
 126   4                if(!ucPara)
 127   4                {
 128   5                  ucPara=99;
 129   5                }
 130   4                else
 131   4                  ucPara--;
 132   4              }
 133   3              break;      
 134   3          }
 135   2        }
 136   1      }
 137          
 138          void Seg_Proc(void)
 139          {
 140   1        //if(ucSeg_Flag) 
 141   1        //{
 142   1          //ucSeg_Flag=0;
 143   1        
 144   1          if(!ucState)
 145   1          {
 146   2            sprintf(pucSeg_Buff, "U1   %4.1f",usWd/10.0); 
 147   2          }
 148   1          else if(ucState==1)
 149   1          {
 150   2            if(!ucS17_Press)
 151   2              sprintf(pucSeg_Buff, "U2 %02u-%02u",(u16)pucTim_Now[0],(u16)pucTim_Now[1]); 
 152   2            else
 153   2              sprintf(pucSeg_Buff, "U2 %02u-%02u",(u16)pucTim_Now[1],(u16)pucTim_Now[2]); 
 154   2          }
 155   1          else if(ucState==2)
 156   1          {
 157   2            sprintf(pucSeg_Buff, "U3    %02u",(u16)ucPara);
 158   2          }
 159   1          else
 160   1          {
 161   2            sprintf(pucSeg_Buff, "U4  %04u",(u16)usDist);
 162   2          }   
 163   1          Seg_Tran(pucSeg_Buff,pucSeg_Code);  
 164   1        //}
 165   1      }
 166          void ISR_T1() interrupt 3   //1ms
 167          {
 168   1        static u8 uc10ms_Cnt=0,uc100ms_Cnt=0;
 169   1        uwMs++;
 170   1        
 171   1        if(++uc10ms_Cnt==10)
 172   1        {
 173   2          uc10ms_Cnt=0;
 174   2          ucSeg_Flag=1;
 175   2          ucTim_Flag=1;
 176   2        }
 177   1        if(++uc100ms_Cnt==100)
 178   1        {
 179   2          uc100ms_Cnt=0;
C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2024 09:24:44 PAGE 4   

 180   2          uc100ms_Flag=1;
 181   2          ucWave_Flag=1;
 182   2        }
 183   1        Seg_Disp(pucSeg_Code,ucSeg_Pos);
 184   1        if(++ucSeg_Pos==8) ucSeg_Pos=0;   
 185   1      }
 186          
 187          void ISR_Uart1(void) interrupt 4 
 188          {              
 189   1        static u8 pucRecv[7]={0};
 190   1        static u8 ucPos=0;
 191   1        u8 str1[3]={0};
 192   1        u8 str2[3]={0};
 193   1        u8 c1,c2;
 194   1        int rst;
 195   1        u16 x;
 196   1        if(RI)
 197   1        {
 198   2          RI=0;
 199   2          pucRecv[ucPos++]=SBUF;
 200   2          pucRecv[ucPos]=0;
 201   2          if(ucPos==6)
 202   2          {     
 203   3            
 204   3            //rst=sscanf(pucRecv,"%2s%2d%2s",str1,&x,str2);      Err
 205   3            //rst=sscanf(pucRecv,"WD%2d\r\n",&x);   rst<--1,  \r\n
 206   3            rst=sscanf(pucRecv,"WD%2d%c%c",&x,&c1,&c2);
 207   3            if(rst==3)
 208   3            {
 209   4              usDist=c1;
 210   4              ucPara=x;
 211   4              if(x>=10 && x<=99 && c1=='\r' && c2=='\n')
 212   4              {
 213   5                ucPara=x;
 214   5                ucUartFlag=1;
 215   5              }
 216   4              else
 217   4                ucUartFlag=3;       
 218   4            }
 219   3            else
 220   3              ucUartFlag=2;
 221   3            ucPos=0;
 222   3          }   
 223   2          
 224   2        }
 225   1      }
 226          
 227          void Uart_Proc(void)
 228          {   
 229   1         switch(ucUartFlag)
 230   1         {
 231   2            case 1:           
 232   2                UartSend("Good");
 233   2                break;     
 234   2            case 2:           
 235   2                UartSend("Error2");
 236   2                break;    
 237   2            case 3:           
 238   2                UartSend("Error3");
 239   2                break;    
 240   2          }
 241   1         ucUartFlag=0;    
C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2024 09:24:44 PAGE 5   

 242   1      }
 243          
 244          void Wd_Proc(void)
 245          { 
 246   1        static u32 ulStepBegin=0;
 247   1        static u8 ucStep=0;
 248   1        s16 sWd;
 249   1        
 250   1        switch(ucStep)
 251   1        {
 252   2          case 0:
 253   2            Wd_Convert();
 254   2            ulStepBegin=uwMs;
 255   2            ucStep=1;
 256   2            break;
 257   2          case 1:
 258   2            if(uwMs-ulStepBegin>760)    //760
 259   2            {       
 260   3              sWd=Wd_Read();
 261   3              usWd=(sWd/16.0+0.05)*10;  
 262   3              ulStepBegin=uwMs;
 263   3              ucStep=2;
 264   3            }
 265   2            break;
 266   2          case 2:     
 267   2              if(uwMs-ulStepBegin>5)    //100 »ò10
 268   2              {
 269   3                ucStep=0;
 270   3              } 
 271   2              break;
 272   2        }   
 273   1      }
 274          
 275          void Led_Proc(void)
 276          {
 277   1        static u8 ucLed_Old=0;
 278   1          if(ucHour_5s)
 279   1            ucLed |=1;
 280   1          else
 281   1            ucLed &=~1;
 282   1          if(!ucMode)
 283   1            ucLed |=1<<1;
 284   1          else
 285   1            ucLed &=~(1<<1);
 286   1        
 287   1        if(ucRly_On)
 288   1        {
 289   2          if(uc100ms_Flag)
 290   2          {
 291   3            uc100ms_Flag=0;
 292   3            ucLed ^=1<<2;
 293   3          }
 294   2        }
 295   1        else
 296   1          ucLed &=~(1<<2);
 297   1        if(ucLed!=ucLed_Old)
 298   1        {
 299   2          ucLed_Old=ucLed;
 300   2          Led_Disp(ucLed);
 301   2        }
 302   1      }
 303          
C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2024 09:24:44 PAGE 6   

 304          void Tim_Proc(void)
 305          {
 306   1        if(!ucTim_Flag) return;
 307   1        ucTim_Flag=0;
 308   1        Rd_Time(pucTim_Now);
 309   1        if(!pucTim_Now[1] && !pucTim_Now[2])
 310   1          ucHour_5s=1;
 311   1        else if(pucTim_Now[2]>=5)
 312   1          ucHour_5s=0;
 313   1      }
 314          
 315          void Relay_Proc(void)
 316          {
 317   1        static ucRly_On_Old=0;
 318   1        if(!ucMode)
 319   1        {
 320   2          if(usWd> ucPara*10)
 321   2          {
 322   3            //Relay(1);
 323   3            ucRly_On=1;
 324   3          }
 325   2          else
 326   2          {
 327   3            //Relay(0);
 328   3            ucRly_On=0;
 329   3          }
 330   2        }
 331   1        else
 332   1        {
 333   2          if(ucHour_5s)
 334   2          {
 335   3            //Relay(1);
 336   3            ucRly_On=1;
 337   3          }
 338   2          else
 339   2          {
 340   3            //Relay(0);
 341   3            ucRly_On=0;
 342   3          }
 343   2        }
 344   1        if(ucRly_On!=ucRly_On_Old)
 345   1        {
 346   2          if(ucRly_On)
 347   2            Relay(1);
 348   2          else
 349   2            Relay(0);
 350   2          ucRly_On_Old=ucRly_On;
 351   2        }   
 352   1      }
 353          void Wave_Proc(void)
 354          {
 355   1        u8 i=4;   //or i=6
 356   1        u16 TH0TL0=0;
 357   1        if(!ucWave_Flag) return;
 358   1        ucWave_Flag=0;
 359   1      
 360   1        TL0=0xF4;
 361   1        TH0=0xFF;
 362   1        TF0=0;
 363   1        TR0=1;
 364   1        while(i--)
 365   1        {
C51 COMPILER V9.52.0.0   MAIN                                                              03/17/2024 09:24:44 PAGE 7   

 366   2          while(!TF0);
 367   2          TF0=0;
 368   2          Tx_Wave ^=1;
 369   2        } 
 370   1        TR0=0;
 371   1        
 372   1        TL0=0;
 373   1        TH0=0;
 374   1        TF0=0;
 375   1        TR0=1;
 376   1        while(!TF0 && Rx_Wave);
 377   1        TR0=0;
 378   1        if(TF0)
 379   1        {
 380   2          TF0=0;
 381   2          usDist=65535*0.017;   
 382   2        }
 383   1        else
 384   1        {
 385   2          TH0TL0=(u16)TH0;
 386   2          TH0TL0=(u16)(TH0TL0<<8) + TL0;      
 387   2          usDist=TH0TL0*0.017;
 388   2        }   
 389   1      }   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1661    ----
   CONSTANT SIZE    =     88    ----
   XDATA SIZE       =     65      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
