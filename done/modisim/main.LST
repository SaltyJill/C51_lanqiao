C51 COMPILER V9.52.0.0   MAIN                                                              03/15/2025 13:02:41 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\por-tool\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "main.h"
   2          #include "driver.h"
   3          #include "iic.h"
   4          #include <stdio.h>
   5          /*定时器参数*/
   6          u32 ISR_1MS;
   7          /*数码管参数*/
   8          u8 seg_DISP[10] = "12345";
   9          u8 seg_CODE[8] = {0};
  10          u8 seg_POSI = 0;
  11          u8 flag_SEGM = 0;
  12          u8 page = 0;
  13          u8 begin_nEND = 0;
  14          /*ADC参数*/
  15          u8 RH_para = 50;
  16          u8 RH = 0;
  17          u32 sec_1S = 3;
  18          /*LED参数*/
  19          u8 led_DISP = 0;
  20          u8 flag_ADC = 0;
  21          /*继电器参数*/
  22          u8 flag_RELAY = 0;
  23          
  24          void LED_FUC(void);
  25          void SEG_FUC(void);
  26          void KEYB_FUC(void);
  27          void ADC_FUC(void);
  28          void RELAY_FUC(void);
  29          
  30          void main(void)
  31          {
  32   1          Other_Cls();
  33   1          T1_int();
  34   1          while (1)
  35   1          {
  36   2              KEYB_FUC();
  37   2              ADC_FUC();
  38   2              LED_FUC();
  39   2              SEG_FUC();
  40   2              RELAY_FUC();
  41   2          }
  42   1      }
  43          void LED_FUC(void)
  44          {
  45   1          static u8 led_past;
  46   1          switch (page)
  47   1          {
  48   2          case 0:
  49   2              led_DISP |= 1;
  50   2              led_DISP &= 0xF9;
  51   2              break;
  52   2          case 1:
  53   2              led_DISP |= (1 << 1);
  54   2              led_DISP &= 0xFA;
  55   2              break;
C51 COMPILER V9.52.0.0   MAIN                                                              03/15/2025 13:02:41 PAGE 2   

  56   2          case 2:
  57   2              led_DISP |= (1 << 2);
  58   2              led_DISP &= 0xFC;
  59   2          default:
  60   2              break;
  61   2          }
  62   1          if (begin_nEND)
  63   1          {
  64   2              led_DISP |= (1 << 7);
  65   2          }
  66   1          else
  67   1          {
  68   2              led_DISP &= ~(1 << 7);
  69   2          }
  70   1          if (led_past != led_DISP)
  71   1          {
  72   2              led_past = led_DISP;
  73   2              Led_Out(led_DISP);
  74   2          }
  75   1      }
  76          void SEG_FUC(void)
  77          {
  78   1          if (flag_SEGM)
  79   1          {
  80   2              flag_SEGM = 0;
  81   2              switch (page)
  82   2              {
  83   3              case 0:
  84   3                  sprintf(seg_DISP, "C`````%02u", (u16)RH);
  85   3                  break;
  86   3              case 1:
  87   3                  sprintf(seg_DISP, "E`````%02u", (u16)RH_para);
  88   3                  break;
  89   3              case 2:
  90   3                  sprintf(seg_DISP, "H`````%2u", (u16)sec_1S);
  91   3                  break;
  92   3              }
  93   2          }
  94   1          Seg_TR(seg_DISP, seg_CODE);
  95   1      }
  96          void KEYB_FUC(void)
  97          {
  98   1          static u8 KEY_PAST;
  99   1          u8 KEY_NOW;
 100   1          KEY_NOW = Key_MARTIX();
 101   1          if (KEY_PAST != KEY_NOW)
 102   1          {
 103   2              switch (KEY_NOW)
 104   2              {
 105   3              case 4:
 106   3                  page = (++page) % 3;
 107   3                  break;
 108   3              case 5:
 109   3                  begin_nEND = ~begin_nEND;
 110   3                  break;
 111   3              case 8:
 112   3                  if (page == 1)
 113   3                  {
 114   4                      RH_para -= 5;
 115   4                  }
 116   3                  else if (page == 2)
 117   3                  {
C51 COMPILER V9.52.0.0   MAIN                                                              03/15/2025 13:02:41 PAGE 3   

 118   4                      if (--sec_1S < 1)
 119   4                      {
 120   5                          sec_1S = 10;
 121   5                      }
 122   4                  }
 123   3                  if (RH_para < 30)
 124   3                  {
 125   4                      RH_para = 90;
 126   4                  }
 127   3                  break;
 128   3              case 9:
 129   3                  if (page == 1)
 130   3                  {
 131   4                      RH_para += 5;
 132   4                  }
 133   3                  else if (page == 2)
 134   3                  {
 135   4                      if (++sec_1S > 10)
 136   4                      {
 137   5                          sec_1S = 1;
 138   5                      }
 139   4                  }
 140   3                  if (RH_para > 90)
 141   3                  {
 142   4                      RH_para = 30;
 143   4                  }
 144   3                  break;
 145   3              }
 146   2              KEY_PAST = KEY_NOW;
 147   2          }
 148   1      }
 149          void ADC_FUC(void)
 150          {
 151   1          u8 ucADC;
 152   1          static u8 rh_past;
 153   1          if (flag_ADC)
 154   1          {
 155   2              flag_ADC = 0;
 156   2              ucADC = PCF8591_ADC();
 157   2              RH = (80/153.0)*ucADC-(50/3.0);
 158   2              if (RH < 10)
 159   2              {
 160   3                  RH = 10;
 161   3              }
 162   2              else if (RH > 90)
 163   2              {
 164   3                  RH = 90;
 165   3              }
 166   2              if (rh_past > RH_para && RH<RH_para)
 167   2              {
 168   3                  flag_RELAY = 1;
 169   3              }
 170   2              rh_past=RH;
 171   2          }
 172   1      }
 173          void RELAY_FUC(void)
 174          {
 175   1          static u32 relay_T;
 176   1          if (begin_nEND && flag_RELAY)
 177   1          {
 178   2              Relay(1);
 179   2              relay_T = ISR_1MS;
C51 COMPILER V9.52.0.0   MAIN                                                              03/15/2025 13:02:41 PAGE 4   

 180   2              flag_RELAY = 0;
 181   2          }
 182   1          else if (ISR_1MS - relay_T > (sec_1S * 1000))
 183   1          {
 184   2              Relay(0);
 185   2          }
 186   1      }
 187          void T1_ISR(void) interrupt 3
 188          {
 189   1          static u32 ISR_10MS = 0, ISR_100MS = 0;
 190   1          ISR_1MS++;
 191   1          if (++ISR_10MS == 10)
 192   1          {
 193   2              ISR_10MS = 0;
 194   2              flag_SEGM = 1;
 195   2          }
 196   1          if (++ISR_100MS == 100)
 197   1          {
 198   2              ISR_100MS = 0;
 199   2              flag_ADC = 1;
 200   2          }
 201   1          Seg_DP(seg_CODE, seg_POSI);
 202   1          if (++seg_POSI == 8)
 203   1          {
 204   2              seg_POSI = 0;
 205   2          }
 206   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    676    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     50       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
