C51 COMPILER V9.52.0.0   DRIVER                                                            03/15/2025 13:02:41 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DRIVER
OBJECT MODULE PLACED IN driver.OBJ
COMPILER INVOKED BY: D:\por-tool\Keil\C51\BIN\C51.EXE driver.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "driver.h"
   2          extern volatile u32 ISR_1MS;
   3          void Led_Out(u8 ouT)
   4          {
   5   1          P0 = ~ouT;
   6   1          P2 = (P2 & 0x1F) | 0x80;
   7   1          P2 &= 0x1F;
   8   1      }
   9          void Other_Cls(void)
  10          {
  11   1          P0 = 0x0;
  12   1          P2 = (P2 & 0x1F) | 0x80;
  13   1          P2 &= 0x1F;
  14   1          P0 = 0x00;
  15   1          P2 = (P2 & 0x1F) | 0xA0;
  16   1          P2 &= 0x1F;
  17   1      }
  18          void T1_int(void) // 12T,1Mhz
  19          {
  20   1          TH1 = 0xFC;
  21   1          TL1 = 0x18;
  22   1          AUXR &= ~(1 << 6);
  23   1          TMOD &= 0x0F;
  24   1          TF1 = 0;
  25   1          EA = 1;
  26   1          ET1 = 1;
  27   1          TR1 = 1;
  28   1      }
  29          void Seg_TR(u8 *seg_DISP, u8 *seg_CODE)
  30          {
  31   1          u8 i, j;
  32   1          for (j = 0, i = 0; j < 8; i++, j++)
  33   1          {
  34   2              switch (*(seg_DISP + i))
  35   2              {
  36   3              case '0':
  37   3                  *(seg_CODE + j) = 0xC0;
  38   3                  break;
  39   3              case '1':
  40   3                  *(seg_CODE + j) = 0xF9;
  41   3                  break;
  42   3              case '2':
  43   3                  *(seg_CODE + j) = 0xA4;
  44   3                  break;
  45   3              case '3':
  46   3                  *(seg_CODE + j) = 0xB0;
  47   3                  break;
  48   3              case '4':
  49   3                  *(seg_CODE + j) = 0x99;
  50   3                  break;
  51   3              case '5':
  52   3                  *(seg_CODE + j) = 0x92;
  53   3                  break;
  54   3              case '6':
  55   3                  *(seg_CODE + j) = 0x82;
C51 COMPILER V9.52.0.0   DRIVER                                                            03/15/2025 13:02:41 PAGE 2   

  56   3                  break;
  57   3              case '7':
  58   3                  *(seg_CODE + j) = 0xF8;
  59   3                  break;
  60   3              case '8':
  61   3                  *(seg_CODE + j) = 0x80;
  62   3                  break;
  63   3              case '9':
  64   3                  *(seg_CODE + j) = 0x90;
  65   3                  break;
  66   3              case 'C':
  67   3                  *(seg_CODE + j) = 0xC6;
  68   3                  break;
  69   3              case 'E':
  70   3                  *(seg_CODE + j) = 0x86;
  71   3                  break;
  72   3              case 'H':
  73   3                  *(seg_CODE + j) = 0x89;
  74   3                  break;
  75   3              default:
  76   3                  *(seg_CODE + j) = 0xFF;
  77   3                  break;
  78   3              }
  79   2          }
  80   1      }
  81          void Seg_DP(u8 *seg_CODE, u8 seg_POSI)
  82          {
  83   1          P0 = 0xFF;
  84   1          P2 = (P2 & 0x1F) | 0xE0;
  85   1          P2 &= 0x1F;
  86   1          P0 = (u8)1 << seg_POSI;
  87   1          P2 = (P2 & 0x1F) | 0xC0;
  88   1          P2 &= 0x1F;
  89   1          P0 = *(seg_CODE + seg_POSI);
  90   1          P2 = (P2 & 0x1F) | 0xE0;
  91   1          P2 &= 0x1F;
  92   1      }
  93          void Delay(u8 uk)
  94          {
  95   1          u32 uTime = 0;
  96   1          uTime = ISR_1MS;
  97   1          while (ISR_1MS - uTime < uk)
  98   1          {
  99   2              /* code */
 100   2          }
 101   1      }
 102          void Relay(u8 nof)
 103          {
 104   1          P0 = 0x00;
 105   1          P2 &= 0x1F;
 106   1          if (nof)
 107   1          {
 108   2              P0 |= (1 << 4);
 109   2          }
 110   1          else
 111   1          {
 112   2              P0 &= ~(1 << 4);
 113   2          }
 114   1          P2 |= 0xA0;
 115   1          P2 &= 0x1F;
 116   1      }
 117          unsigned char Key_MARTIX(void)
C51 COMPILER V9.52.0.0   DRIVER                                                            03/15/2025 13:02:41 PAGE 3   

 118          {
 119   1          u16 RD0, RD1;
 120   1          u8 button;
 121   1          P44 = 0;
 122   1          P42 = 1;
 123   1          P35 = 1;
 124   1          P34 = 1;
 125   1          RD0 = (P3 & 0x0F);
 126   1          P44 = 1;
 127   1          P42 = 0;
 128   1          RD0 = (RD0 << 4) | (P3 & 0x0F);
 129   1          P42 = 1;
 130   1          P35 = 0;
 131   1          RD0 = (RD0 << 4) | (P3 & 0x0F);
 132   1          P35 = 1;
 133   1          P34 = 0;
 134   1          RD0 = (RD0 << 4) | (P3 & 0x0F);
 135   1          if (RD0 == 0xFFFF)
 136   1          {
 137   2              return 0;
 138   2          }
 139   1          Delay(10);
 140   1          P44 = 0;
 141   1          P42 = 1;
 142   1          P35 = 1;
 143   1          P34 = 1;
 144   1          RD1 = (P3 & 0x0F);
 145   1          P44 = 1;
 146   1          P42 = 0;
 147   1          RD1 = (RD1 << 4) | (P3 & 0x0F);
 148   1          P42 = 1;
 149   1          P35 = 0;
 150   1          RD1 = (RD1 << 4) | (P3 & 0x0F);
 151   1          P35 = 1;
 152   1          P34 = 0;
 153   1          RD1 = (RD1 << 4) | (P3 & 0x0F);
 154   1          if (RD0 != RD1)
 155   1          {
 156   2              return 0;
 157   2          }
 158   1          switch (~RD1)
 159   1          {
 160   2          case 0x8000:
 161   2              button = 4;
 162   2              break;
 163   2          case 0x4000:
 164   2              button = 5;
 165   2              break;
 166   2          case 0x2000:
 167   2              button = 6;
 168   2              break;
 169   2          case 0x1000:
 170   2              button = 7;
 171   2              break;
 172   2          case 0x0800:
 173   2              button = 8;
 174   2              break;
 175   2          case 0x0400:
 176   2              button = 9;
 177   2              break;
 178   2          case 0x0200:
 179   2              button = 10;
C51 COMPILER V9.52.0.0   DRIVER                                                            03/15/2025 13:02:41 PAGE 4   

 180   2              break;
 181   2          case 0x0100:
 182   2              button = 11;
 183   2              break;
 184   2          case 0x0080:
 185   2              button = 12;
 186   2              break;
 187   2          case 0x0040:
 188   2              button = 13;
 189   2              break;
 190   2          case 0x0020:
 191   2              button = 14;
 192   2              break;
 193   2          case 0x0010:
 194   2              button = 15;
 195   2              break;
 196   2          case 0x0008:
 197   2              button = 16;
 198   2              break;
 199   2          case 0x0004:
 200   2              button = 17;
 201   2              break;
 202   2          case 0x0002:
 203   2              button = 18;
 204   2              break;
 205   2          case 0x0001:
 206   2              button = 19;
 207   2              break;
 208   2          default:
 209   2              button = 0;
 210   2              break;
 211   2          }
 212   1          return button;
 213   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    917    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
